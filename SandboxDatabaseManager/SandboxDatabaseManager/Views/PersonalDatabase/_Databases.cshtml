@model System.Data.DataSet

@if (Model != null && Model.Tables.Count > 0)
{
    <table id="databases" class="display compact" cellspacing="0" width="100%">
        <thead>
            <tr>
                @foreach (System.Data.DataColumn column in @Model.Tables["Databases"].Columns)
                {
                    <th>@column.ColumnName</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (System.Data.DataRow row in @Model.Tables["Databases"].Rows)
            {
                <tr>
                    @foreach (System.Data.DataColumn column2 in @Model.Tables["Databases"].Columns)
                    {
                        if (@column2.ColumnName == "Created On")
                        {
                            <td>@(((DateTime)row[column2.ColumnName]).ToString("yyyy-MM-dd HH:mm:ss"))</td>
                        }
                        else
                        {
                            <td>@row[column2.ColumnName].ToString()</td>
                        }
                    }
                </tr>
            }
        </tbody>
    </table>
}
<script>
    
    //var databaseSnapshots = [
    //                            { snapshotname: '12', servername: 'TOMEK-PC', databasename: '1111', createdon: '2015-09-12 21:43:31' },
    //                            { snapshotname: '34345', servername: 'TOMEK-PC', databasename: '1111', createdon: '2015-09-12 21:42:42' },
    //];


    var databaseSnapshots = [
                                @for (int i = 0; i < @Model.Tables["DatabaseSnapshots"].Rows.Count; i++)
    {<text>                                { snapshotname: '@Model.Tables["DatabaseSnapshots"].Rows[i]["Database Snapshot Name"]', servername: '@Model.Tables["DatabaseSnapshots"].Rows[i]["Server Name"].ToString().Replace("\\", "\\\\")', databasename: '@Model.Tables["DatabaseSnapshots"].Rows[i]["Database Name"]', createdon: '@Model.Tables["DatabaseSnapshots"].Rows[i]["Created On"]' }</text>if (@Model.Tables["DatabaseSnapshots"].Rows.Count > (i + 1))
        {<text>,
</text>}
        }

    ];

</script>